import java.util.*;
class Hamiltonian
{
     private int adj[][],x[],n;
     public Hamiltonian()
     {
          Scanner sc=new Scanner(System.in);
          System.out.println("Enter number of vertices :");
          n=sc.nextInt();
          x=new int[n];
          x[0]=0;
          adj=new int[n][n];
          System.out.println("Enter adjacency matrix :");
          for (int i=0;i<n;i++)
          {
               for (int j=0;j<n;j++)
                    adj[i][j]=sc.nextInt();
               if(i!=0)
                    x[i]=-1;
          }
          sc.close();
    }
    public void nextval(int k)
    {
          int i=0;
          while(true)
          {
        	  i=0;
        	  x[k]+=1;
              if(x[k]==n)
                 x[k]=-1;
              if (x[k]==-1)
                 return;
              if (adj[x[k-1]][x[k]]==1)
              for(i=0;i<k;i++)
                if(x[i]==x[k])
                    break;
              if (i==k) 
                  if(k<n-1||k==n-1&&adj[x[n-1]][0]==1)
                       return;
           }
     }
     public void getHcycle(int k)
     {
          while(true)
          {
                nextval(k);
                if(x[k]==-1)
                     return;
                if (k==n-1)
                 {
                      System.out.println("Solution :");                     
                      for(int i=0;i<n;i++)
                          System.out.print((x[i]+1)+" ");
                      System.out.println();
                 }
                else
                    getHcycle(k+1);
           }
     }
}
public class HamiltonianCycle
 {
     public static void main(String args[])
     {
         Hamiltonian ob=new Hamiltonian();
         ob.getHcycle(1);
     }
}
